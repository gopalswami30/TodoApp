{"ast":null,"code":"var _jsxFileName = \"/Users/gopalswami/Documents/todo-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [element, setEle] = useState(\"\");\n  const [listElement, setElemnet] = useState([]);\n\n  const insertTask = event => {\n    setEle(event.target.value);\n  };\n\n  const getDone = () => {\n    setElemnet(olditem => {\n      return [...olditem, element];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a Task\",\n      onClick: insertTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 10\n      }, this), listElement.map(curelem => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: curelem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onSubmit: getDone,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"xTb1KygY3NyZF6SMoAhpIHWbq54=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gopalswami/Documents/todo-app/src/App.jsx"],"names":["React","useState","App","element","setEle","listElement","setElemnet","insertTask","event","target","value","getDone","olditem","map","curelem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AACA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AACV,QAAM,CAACC,OAAD,EAASC,MAAT,IAAiBH,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACI,WAAD,EAAaC,UAAb,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;;AACA,QAAMM,UAAU,GAAEC,KAAD,IAAS;AACzBJ,IAAAA,MAAM,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACA,GAFD;;AAGA,QAAMC,OAAO,GAAC,MAAI;AAChBL,IAAAA,UAAU,CAAEM,OAAD,IAAW;AACtB,aAAO,CAAC,GAAGA,OAAJ,EAAYT,OAAZ,CAAP;AACC,KAFS,CAAV;AAID,GALD;;AAMA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA,YADA,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,YAA/B;AAA4C,MAAA,OAAO,EAAEI;AAArD;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA,8BACA;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,cADA,EAEEE,WAAW,CAACQ,GAAZ,CAAiBC,OAAD,IAAW;AAC3B,4BAAO;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAWC;AAAQ,MAAA,QAAQ,EAAEH,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA,kBADJ;AAeH,CA3BD;;GAAMT,G;;KAAAA,G;AA4BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nconst App=()=>{\n    const [element,setEle]=useState(\"\")\n    const [listElement,setElemnet]=useState([])\n    const insertTask=(event)=>{\n     setEle(event.target.value)   \n    }\n    const getDone=()=>{\n      setElemnet((olditem)=>{\n      return [...olditem,element]\n      }\n      )\n    }\n    return(\n        <>\n        <br/>\n         <h1>Todo App</h1>\n         <br/>\n         <input type='text' placeholder='Add a Task' onClick={insertTask} ></input> \n         <ol>\n         <li>{element}</li>\n          {listElement.map((curelem)=>{\n           return <li>{curelem}</li>  \n          })}  \n         </ol>  \n         <button onSubmit={getDone}>+</button>\n        </>\n    )\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}